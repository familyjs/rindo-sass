name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: (rindo-sass with Rindo version ${{ matrix.rindo_version }})
    strategy:
      fail-fast: false
      matrix:
        # Run with multiple different versions of Rindo in parallel:
        # 1. DEFAULT - uses the version of Rindo written in `package-lock.json`, keeping the same version used by the
        # Rindo team as a source of truth
        # 2. 2 - will install the latest release under major version 2 of Rindo. This should be kept as long as this
        # library supports Rindo v2.Y.Z
        # 3. 3 - will install the latest release under major version 3 of Rindo. This should be kept as long as this
        # library supports Rindo v3.Y.Z
        # 4. 4 - will install the latest release under major version 4 of Rindo. This should be kept as long as this
        # library supports Rindo v4.Y.Z
        rindo_version: ['DEFAULT', '2', '3', '4']
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      with:
        persist-credentials: false
    - name: Use Node from Volta
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
      with:
        node-version-file: 'package.json'
        cache: 'npm'
    - name: Install Dependencies
      run: npm ci
      shell: bash
    - name: Prettier Check
      run: npm run prettier.dry-run
      shell: bash
    - name: Install Rindo ${{matrix.rindo_version}}
      run: npm install --save-dev @rindo/core@${{matrix.rindo_version}}
      shell: bash
      if: ${{ matrix.rindo_version != 'DEFAULT' }}
    - name: Report Rindo Version
      run: npm ls @rindo/core
      shell: bash
    - name: Build
      run: npm run build -- --ci
      shell: bash
    - name: Test
      run: npm run test.ci
      shell: bash
